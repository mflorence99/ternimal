<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="191" failures="0" time="27.989">
  <testsuite name="xterm-pty" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:01" time="3.907" tests="9">
    <testcase classname="xterm-pty findCWD - Linux" name="xterm-pty findCWD - Linux" time="0.51">
    </testcase>
    <testcase classname="xterm-pty findCWD - MacOS" name="xterm-pty findCWD - MacOS" time="1.398">
    </testcase>
    <testcase classname="xterm-pty findCWD - Windows" name="xterm-pty findCWD - Windows" time="0.505">
    </testcase>
    <testcase classname="xterm-pty xtermConnect" name="xterm-pty xtermConnect" time="0.01">
    </testcase>
    <testcase classname="xterm-pty xtermConnect - detect CWD" name="xterm-pty xtermConnect - detect CWD" time="0.605">
    </testcase>
    <testcase classname="xterm-pty xtermDisconnect" name="xterm-pty xtermDisconnect" time="0.004">
    </testcase>
    <testcase classname="xterm-pty xtermKill" name="xterm-pty xtermKill" time="0.002">
    </testcase>
    <testcase classname="xterm-pty xtermResizePty" name="xterm-pty xtermResizePty" time="0.001">
    </testcase>
    <testcase classname="xterm-pty xtermToPty" name="xterm-pty xtermToPty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:05" time="0.494" tests="7">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="TernimalState enable" name="TernimalState enable" time="0.035">
    </testcase>
    <testcase classname="TernimalState hide/showTabPrefs" name="TernimalState hide/showTabPrefs" time="0.006">
    </testcase>
    <testcase classname="TernimalState hide/showWidgetSidebar" name="TernimalState hide/showWidgetSidebar" time="0.005">
    </testcase>
    <testcase classname="TernimalState updateLongRunningOp" name="TernimalState updateLongRunningOp" time="0.007">
    </testcase>
    <testcase classname="TernimalState unique" name="TernimalState unique" time="0.006">
    </testcase>
    <testcase classname="TernimalState rcvProgress$" name="TernimalState rcvProgress$" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="DraggableDirective" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:06" time="1.418" tests="1">
    <testcase classname="DraggableDirective draggable set after long click" name="DraggableDirective draggable set after long click" time="1.112">
    </testcase>
  </testsuite>
  <testsuite name="rreaddir" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:07" time="1.129" tests="5">
    <testcase classname="rreaddir smoke test" name="rreaddir smoke test" time="0.007">
    </testcase>
    <testcase classname="rreaddir budgeted count can be exceeded" name="rreaddir budgeted count can be exceeded" time="0.002">
    </testcase>
    <testcase classname="rreaddir budgeted time can be exceeded" name="rreaddir budgeted time can be exceeded" time="0.002">
    </testcase>
    <testcase classname="rreaddir quick exit on unreadable directory" name="rreaddir quick exit on unreadable directory" time="0.001">
    </testcase>
    <testcase classname="rreaddir real-life test on home directory" name="rreaddir real-life test on home directory" time="0.746">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:08" time="0.527" tests="16">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="LayoutState closeSplit - not found" name="LayoutState closeSplit - not found" time="0.04">
    </testcase>
    <testcase classname="LayoutState makeSplit - not found" name="LayoutState makeSplit - not found" time="0.006">
    </testcase>
    <testcase classname="LayoutState makeSplit/closeSplit - vertical - before (aka up)" name="LayoutState makeSplit/closeSplit - vertical - before (aka up)" time="0.007">
    </testcase>
    <testcase classname="LayoutState makeSplit/closeSplit - vertical - after (aka down)" name="LayoutState makeSplit/closeSplit - vertical - after (aka down)" time="0.006">
    </testcase>
    <testcase classname="LayoutState makeSplit/closeSplit - horizontal - before (aka left)" name="LayoutState makeSplit/closeSplit - horizontal - before (aka left)" time="0.006">
    </testcase>
    <testcase classname="LayoutState makeSplit/closeSplit - horizontal - after (aka right)" name="LayoutState makeSplit/closeSplit - horizontal - after (aka right)" time="0.006">
    </testcase>
    <testcase classname="LayoutState updateSplit" name="LayoutState updateSplit" time="0.007">
    </testcase>
    <testcase classname="LayoutState updateSplit - not found" name="LayoutState updateSplit - not found" time="0.006">
    </testcase>
    <testcase classname="LayoutState newLayout/remove" name="LayoutState newLayout/remove" time="0.008">
    </testcase>
    <testcase classname="LayoutState findSplitByID" name="LayoutState findSplitByID" time="0.004">
    </testcase>
    <testcase classname="LayoutState findSplitByID - not found" name="LayoutState findSplitByID - not found" time="0.004">
    </testcase>
    <testcase classname="LayoutState layout -- from selection" name="LayoutState layout -- from selection" time="0.004">
    </testcase>
    <testcase classname="LayoutState everySplit" name="LayoutState everySplit" time="0.004">
    </testcase>
    <testcase classname="LayoutState someSplit" name="LayoutState someSplit" time="0.005">
    </testcase>
    <testcase classname="LayoutState visitSplits" name="LayoutState visitSplits" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:09" time="0.394" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="FileSystemClipboardState dummy" name="FileSystemClipboardState dummy" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:09" time="0.383" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="TerminalPrefsState dummy" name="TerminalPrefsState dummy" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:10" time="0.484" tests="10">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="StatusState remove" name="StatusState remove" time="0.033">
    </testcase>
    <testcase classname="StatusState update - create new split" name="StatusState update - create new split" time="0.005">
    </testcase>
    <testcase classname="StatusState update - create new widget" name="StatusState update - create new widget" time="0.004">
    </testcase>
    <testcase classname="StatusState update - update existing status" name="StatusState update - update existing status" time="0.004">
    </testcase>
    <testcase classname="StatusState match" name="StatusState match" time="0.008">
    </testcase>
    <testcase classname="StatusState match - with no search or matchees" name="StatusState match - with no search or matchees" time="0.005">
    </testcase>
    <testcase classname="StatusState regex" name="StatusState regex" time="0.004">
    </testcase>
    <testcase classname="StatusState status" name="StatusState status" time="0.005">
    </testcase>
    <testcase classname="StatusState status" name="StatusState status" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:10" time="3.129" tests="13">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="TabsState move - left" name="TabsState move - left" time="0.035">
    </testcase>
    <testcase classname="TabsState move - right" name="TabsState move - right" time="0.007">
    </testcase>
    <testcase classname="TabsState move - unchanged" name="TabsState move - unchanged" time="0.005">
    </testcase>
    <testcase classname="TabsState move - does not exist" name="TabsState move - does not exist" time="0.005">
    </testcase>
    <testcase classname="TabsState newTab/remove" name="TabsState newTab/remove" time="0.005">
    </testcase>
    <testcase classname="TabsState remove - does not exist" name="TabsState remove - does not exist" time="0.004">
    </testcase>
    <testcase classname="TabsState update" name="TabsState update" time="0.004">
    </testcase>
    <testcase classname="TabsState update - does not exist" name="TabsState update - does not exist" time="0.005">
    </testcase>
    <testcase classname="TabsState tab" name="TabsState tab" time="0.004">
    </testcase>
    <testcase classname="TabsState tabIndex" name="TabsState tabIndex" time="0.004">
    </testcase>
    <testcase classname="TabsState findTabByID" name="TabsState findTabByID" time="0.003">
    </testcase>
    <testcase classname="TabsState findTabIndexByID" name="TabsState findTabIndexByID" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:14" time="0.352" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="ProcessListState dummy" name="ProcessListState dummy" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:14" time="0.373" tests="7">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="SortState remove" name="SortState remove" time="0.031">
    </testcase>
    <testcase classname="SortState update - create new split" name="SortState update - create new split" time="0.004">
    </testcase>
    <testcase classname="SortState update - create new table" name="SortState update - create new table" time="0.005">
    </testcase>
    <testcase classname="SortState update - update existing sort" name="SortState update - update existing sort" time="0.004">
    </testcase>
    <testcase classname="SortState columnSort" name="SortState columnSort" time="0.004">
    </testcase>
    <testcase classname="SortState columnSort - not found" name="SortState columnSort - not found" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:14" time="0.612" tests="5">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="SelectionState selectLayout" name="SelectionState selectLayout" time="0.038">
    </testcase>
    <testcase classname="SelectionState selectSplit" name="SelectionState selectSplit" time="0.006">
    </testcase>
    <testcase classname="SelectionState layoutID" name="SelectionState layoutID" time="0.004">
    </testcase>
    <testcase classname="SelectionState splitID" name="SelectionState splitID" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Params" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:15" time="0.308" tests="2">
    <testcase classname="Params log" name="Params log" time="0.01">
    </testcase>
    <testcase classname="Params uuid" name="Params uuid" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:15" time="0.398" tests="6">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.001">
    </testcase>
    <testcase classname="PanesState remove" name="PanesState remove" time="0.036">
    </testcase>
    <testcase classname="PanesState update - create new" name="PanesState update - create new" time="0.009">
    </testcase>
    <testcase classname="PanesState update - change existing" name="PanesState update - change existing" time="0.005">
    </testcase>
    <testcase classname="PanesState prefs" name="PanesState prefs" time="0.005">
    </testcase>
    <testcase classname="PanesState prefs - not found" name="PanesState prefs - not found" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="copy-move" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:16" time="0.401" tests="9">
    <testcase classname="copy-move fsCopy" name="copy-move fsCopy" time="0.018">
    </testcase>
    <testcase classname="copy-move fsCopyOrMove - copy to file" name="copy-move fsCopyOrMove - copy to file" time="0.006">
    </testcase>
    <testcase classname="copy-move fsCopyOrMove - error" name="copy-move fsCopyOrMove - error" time="0.002">
    </testcase>
    <testcase classname="copy-move fsCopyOrMoveImpl - copy" name="copy-move fsCopyOrMoveImpl - copy" time="0.006">
    </testcase>
    <testcase classname="copy-move cleanupAfterMove" name="copy-move cleanupAfterMove" time="0.002">
    </testcase>
    <testcase classname="copy-move disambiguateTos" name="copy-move disambiguateTos" time="0.002">
    </testcase>
    <testcase classname="copy-move itemizeFroms" name="copy-move itemizeFroms" time="0.001">
    </testcase>
    <testcase classname="copy-move matchFromsWithTos" name="copy-move matchFromsWithTos" time="0.001">
    </testcase>
    <testcase classname="copy-move fsMove" name="copy-move fsMove" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:16" time="0.356" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.001">
    </testcase>
    <testcase classname="ProcessListPrefsState dummy" name="ProcessListPrefsState dummy" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="process-list" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:16" time="0.623" tests="2">
    <testcase classname="process-list processListKill" name="process-list processListKill" time="0.002">
    </testcase>
    <testcase classname="process-list processListRequest" name="process-list processListRequest" time="0.219">
    </testcase>
  </testsuite>
  <testsuite name="readdir" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:17" time="0.352" tests="4">
    <testcase classname="readdir fsLoadPathRequest" name="readdir fsLoadPathRequest" time="0.007">
    </testcase>
    <testcase classname="readdir fsLoadPathRequest (failure)" name="readdir fsLoadPathRequest (failure)" time="0.001">
    </testcase>
    <testcase classname="readdir makeDescriptor" name="readdir makeDescriptor" time="0.001">
    </testcase>
    <testcase classname="readdir watcher fallback" name="readdir watcher fallback" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="fonts" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:17" time="0.687" tests="1">
    <testcase classname="fonts getAvailableFonts" name="fonts getAvailableFonts" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="local-storage" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:18" time="0.538" tests="6">
    <testcase classname="local-storage smoke test" name="local-storage smoke test" time="0.004">
    </testcase>
    <testcase classname="local-storage localStorageClear" name="local-storage localStorageClear" time="0.001">
    </testcase>
    <testcase classname="local-storage localStorageGetItem" name="local-storage localStorageGetItem" time="0.001">
    </testcase>
    <testcase classname="local-storage localStorageKey" name="local-storage localStorageKey" time="0.001">
    </testcase>
    <testcase classname="local-storage localStorageRemoveItem" name="local-storage localStorageRemoveItem" time="0.001">
    </testcase>
    <testcase classname="local-storage localStorageSetItem" name="local-storage localStorageSetItem" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:19" time="0.433" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="FileSystemFilesState dummy" name="FileSystemFilesState dummy" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:19" time="0.455" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="TerminalXtermDataState dummy" name="TerminalXtermDataState dummy" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:20" time="0.423" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="FileSystemPathsState dummy" name="FileSystemPathsState dummy" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="chmod" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:20" time="0.393" tests="7">
    <testcase classname="chmod fsChmod" name="chmod fsChmod" time="0.008">
    </testcase>
    <testcase classname="chmod fsChmod (failure)" name="chmod fsChmod (failure)" time="0.002">
    </testcase>
    <testcase classname="chmod fsChmodImpl" name="chmod fsChmodImpl" time="0.001">
    </testcase>
    <testcase classname="chmod report" name="chmod report" time="0.001">
    </testcase>
    <testcase classname="chmod report" name="chmod report" time="0.001">
    </testcase>
    <testcase classname="chmod report" name="chmod report" time="0.001">
    </testcase>
    <testcase classname="chmod statsByPath" name="chmod statsByPath" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Services tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:21" time="0.604" tests="6">
    <testcase classname="Services tests helpers Dummy test" name="Services tests helpers Dummy test" time="0.003">
    </testcase>
    <testcase classname="StorageService clear" name="StorageService clear" time="0.017">
    </testcase>
    <testcase classname="StorageService getItem" name="StorageService getItem" time="0.01">
    </testcase>
    <testcase classname="StorageService key" name="StorageService key" time="0.004">
    </testcase>
    <testcase classname="StorageService removeItem" name="StorageService removeItem" time="0.003">
    </testcase>
    <testcase classname="StorageService setItem" name="StorageService setItem" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:21" time="0.49" tests="2">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.002">
    </testcase>
    <testcase classname="FileSystemPrefsState dummy" name="FileSystemPrefsState dummy" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="icons" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:22" time="0.434" tests="2">
    <testcase classname="icons makeColor" name="icons makeColor" time="0.008">
    </testcase>
    <testcase classname="icons makeIcon" name="icons makeIcon" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Services tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:22" time="0.513" tests="1">
    <testcase classname="Services tests helpers Dummy test" name="Services tests helpers Dummy test" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="files" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:23" time="0.626" tests="14">
    <testcase classname="files fsDelete" name="files fsDelete" time="0.007">
    </testcase>
    <testcase classname="files fsExists" name="files fsExists" time="0.001">
    </testcase>
    <testcase classname="files fsNewDir" name="files fsNewDir" time="0.001">
    </testcase>
    <testcase classname="files fsNewDir - error" name="files fsNewDir - error" time="0.002">
    </testcase>
    <testcase classname="files fsNewFile" name="files fsNewFile" time="0.002">
    </testcase>
    <testcase classname="files fsNewFile - error" name="files fsNewFile - error" time="0">
    </testcase>
    <testcase classname="files fsRename" name="files fsRename" time="0.002">
    </testcase>
    <testcase classname="files fsRename - error" name="files fsRename - error" time="0">
    </testcase>
    <testcase classname="files fsTouch" name="files fsTouch" time="0.002">
    </testcase>
    <testcase classname="files fsTouch - error" name="files fsTouch - error" time="0.001">
    </testcase>
    <testcase classname="files fsTrash" name="files fsTrash" time="0.001">
    </testcase>
    <testcase classname="files report" name="files report" time="0.001">
    </testcase>
    <testcase classname="files report" name="files report" time="0.001">
    </testcase>
    <testcase classname="files report" name="files report" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ternimal" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:23" time="0.413" tests="4">
    <testcase classname="ternimal ready (dev mode)" name="ternimal ready (dev mode)" time="0.004">
    </testcase>
    <testcase classname="ternimal ready (prod mode)" name="ternimal ready (prod mode)" time="0">
    </testcase>
    <testcase classname="ternimal ready (getBounds)" name="ternimal ready (getBounds)" time="0.001">
    </testcase>
    <testcase classname="ternimal window-all-closed" name="ternimal window-all-closed" time="0">
    </testcase>
  </testsuite>
  <testsuite name="analyze" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:24" time="0.417" tests="5">
    <testcase classname="analyze fsAnalyze" name="analyze fsAnalyze" time="0.011">
    </testcase>
    <testcase classname="analyze fsAnalyze (failure)" name="analyze fsAnalyze (failure)" time="0.001">
    </testcase>
    <testcase classname="analyze itemizePaths (directory)" name="analyze itemizePaths (directory)" time="0.002">
    </testcase>
    <testcase classname="analyze itemizePaths (file)" name="analyze itemizePaths (file)" time="0.001">
    </testcase>
    <testcase classname="analyze performAnalysis" name="analyze performAnalysis" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="themes" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:24" time="0.348" tests="2">
    <testcase classname="themes getAvailableThemes" name="themes getAvailableThemes" time="0.004">
    </testcase>
    <testcase classname="themes loadTheme" name="themes loadTheme" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="system-info" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:25" time="0.287" tests="1">
    <testcase classname="system-info systemInfo" name="system-info systemInfo" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="paths" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:25" time="0.292" tests="5">
    <testcase classname="paths fsHomeDir" name="paths fsHomeDir" time="0.002">
    </testcase>
    <testcase classname="paths fsParentDir" name="paths fsParentDir" time="0">
    </testcase>
    <testcase classname="paths fsParsePath" name="paths fsParsePath" time="0.001">
    </testcase>
    <testcase classname="paths fsPathSeparator" name="paths fsPathSeparator" time="0">
    </testcase>
    <testcase classname="paths fsRootDir" name="paths fsRootDir" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Utils" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:25" time="0.318" tests="6">
    <testcase classname="Utils colorOf" name="Utils colorOf" time="0.011">
    </testcase>
    <testcase classname="Utils deepCopy" name="Utils deepCopy" time="0.003">
    </testcase>
    <testcase classname="Utils hasProperty (string)" name="Utils hasProperty (string)" time="0.002">
    </testcase>
    <testcase classname="Utils hasProperty (regex)" name="Utils hasProperty (regex)" time="0.002">
    </testcase>
    <testcase classname="Utils merge" name="Utils merge" time="0.002">
    </testcase>
    <testcase classname="Utils nextTick" name="Utils nextTick" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="DestroyService" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:25" time="0.304" tests="1">
    <testcase classname="DestroyService destroy$ will complete a stream" name="DestroyService destroy$ will complete a stream" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="State tests helpers" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:26" time="0.332" tests="1">
    <testcase classname="State tests helpers Dummy test" name="State tests helpers Dummy test" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="native" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:26" time="0.321" tests="5">
    <testcase classname="native nativeClipboardClear" name="native nativeClipboardClear" time="0.002">
    </testcase>
    <testcase classname="native nativeClipboardRead" name="native nativeClipboardRead" time="0">
    </testcase>
    <testcase classname="native nativeClipboardWrite" name="native nativeClipboardWrite" time="0">
    </testcase>
    <testcase classname="native nativeDragStart" name="native nativeDragStart" time="0.002">
    </testcase>
    <testcase classname="native nativeOpen" name="native nativeOpen" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="toolbar" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:27" time="0.309" tests="2">
    <testcase classname="toolbar openDevTools" name="toolbar openDevTools" time="0.002">
    </testcase>
    <testcase classname="toolbar reload" name="toolbar reload" time="0">
    </testcase>
  </testsuite>
  <testsuite name="long-running-op" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:27" time="0.302" tests="1">
    <testcase classname="long-running-op longRunningOpCancel" name="long-running-op longRunningOpCancel" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="NumeralPipe" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:27" time="0.306" tests="3">
    <testcase classname="NumeralPipe 0b" name="NumeralPipe 0b" time="0.002">
    </testcase>
    <testcase classname="NumeralPipe 0,0" name="NumeralPipe 0,0" time="0.001">
    </testcase>
    <testcase classname="NumeralPipe null" name="NumeralPipe null" time="0">
    </testcase>
  </testsuite>
  <testsuite name="BreakablePipe" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:27" time="0.315" tests="2">
    <testcase classname="BreakablePipe breakable" name="BreakablePipe breakable" time="0.002">
    </testcase>
    <testcase classname="BreakablePipe unbreakable" name="BreakablePipe unbreakable" time="0">
    </testcase>
  </testsuite>
  <testsuite name="WidgetHostDirective" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:28" time="0.299" tests="1">
    <testcase classname="WidgetHostDirective directive is created" name="WidgetHostDirective directive is created" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RangePipe" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:28" time="0.306" tests="2">
    <testcase classname="RangePipe creates array without offset" name="RangePipe creates array without offset" time="0.002">
    </testcase>
    <testcase classname="RangePipe creates array with offset" name="RangePipe creates array with offset" time="0">
    </testcase>
  </testsuite>
  <testsuite name="operators" errors="0" failures="0" skipped="0" timestamp="2020-09-09T11:55:28" time="0.311" tests="1">
    <testcase classname="operators scratch" name="operators scratch" time="0.002">
    </testcase>
  </testsuite>
</testsuites>